name: Build

on: 
  push:
  release:
    types: [published]
  pull_request:
    branches:
    - r-impr-nuget-build
    
jobs:
    build:
      name: Build
      env:
        NUPKG_MAJOR: 0.3.1
        CODESIGN_PFX: ${{ secrets.CODESIGN_PFX }}
        CODESIGN_PWD: ${{ secrets.CODESIGN_PWD }}
      runs-on: windows-latest
      environment: Prod
      steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '7.0.x'
      
      - name: Build
        shell: pwsh
        run: |
          $VERSION="$env:NUPKG_MAJOR-ci$env:GITHUB_RUN_ID"
          if ($env:GITHUB_EVENT_NAME -eq "release") {
            $VERSION = $env:GITHUB_REF.Substring($env:GITHUB_REF.LastIndexOf('/') + 1)
          }
          echo "::set-output name=pkgverci::$VERSION"
          echo "PACKAGE VERSION: $VERSION"

          New-Item -ItemType Directory -Force -Path .\artifacts
          dotnet build --configuration Release ./Resizetizer.NT/Resizetizer.NT.csproj
          
          # remove all the packages produces by dotnet build in a current directory and subdirectories
          Get-ChildItem -Path .\ -Filter *.nupkg -Recurse | Remove-Item -Force

          dotnet pack --output ./artifacts --configuration Release -p:PackageVersion=$VERSION ./Resizetizer.NT/Resizetizer.NT.csproj --no-build

          # code signing is disabled for now
          # $pfxPath = Join-Path -Path $pwd -ChildPath "codesigncert.pfx"
          # [IO.File]::WriteAllBytes("$pfxPath", [System.Convert]::FromBase64String($Env:CODESIGN_PFX))
          # nuget sign .\artifacts\*.nupkg -CertificatePath $pfxPath -CertificatePassword "$Env:CODESIGN_PWD" -Timestamper http://timestamp.entrust.net/TSS/RFC3161sha2TS
      - name: Run Tests
        run: dotnet test --configuration Release ./Resizetizer.NT.Tests/Resizetizer.NT.Tests.csproj

      - name: Artifacts
        uses: actions/upload-artifact@v1
        with:
          name: NuGet
          path: ./artifacts
      

    publish:
      name: Publish
      needs: build
      runs-on: windows-latest
      if: github.event_name == 'release'
      env:
        NUGET_ORG_API_KEY: ${{ secrets.NUGET_ORG_API_KEY }}
      environment: Prod
      steps:
        - name: Download Artifacts
          uses: actions/download-artifact@v2.1.1
          with:
            name: NuGet
        - name: Display structure of downloaded files
          run: ls -R
        - name: Setup .NET Core
          uses: actions/setup-dotnet@v3
          with:
            dotnet-version: '7.0.x'
        - name: Push NuGet
          run: |
            dotnet nuget push .\*.nupkg --source https://api.nuget.org/v3/index.json --api-key "$Env:NUGET_ORG_API_KEY"
